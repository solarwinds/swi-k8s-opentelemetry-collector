{{- if .Values.otel.events.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" (tuple . "-events") }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: swo-k8s-collector
{{ include "common.labels" . | indent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "common.fullname" (tuple . "-events") }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/events-collector-config-map.yaml") . | sha256sum }}
        checksum/config_common_env: {{ include (print $.Template.BasePath "/common-env-config-map.yaml") . | sha256sum }}
        checksum/values: {{ toJson .Values | sha256sum }}
{{- if .Values.otel.events.telemetry.metrics.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ (split ":" .Values.otel.events.telemetry.metrics.address)._1 | quote }}
        prometheus.io/path: "/metrics"
        prometheus.io/scheme: "http"
{{- end}}
      labels:
        app.kubernetes.io/name: swo-k8s-collector
{{ include "common.template-labels" . | indent 8 }}
        app: {{ include "common.fullname" (tuple . "-events") }}
    spec:
      serviceAccountName: {{ include "common.fullname" . }}
      securityContext: {}
      nodeSelector:
      {{- if .Values.otel.events.nodeSelector }}
      {{ toYaml .Values.otel.events.nodeSelector | nindent 8 }}
      {{- else }}
        kubernetes.io/os: linux
        kubernetes.io/arch: amd64
      {{- end }}
      {{- if .Values.otel.events.tolerations }}
      tolerations:
        {{ toYaml .Values.otel.events.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.otel.events.affinity }}
      affinity:
        {{- toYaml .Values.otel.events.affinity | nindent 8 }}
      {{- end }}
      containers:
        - name: swi-opentelemetry-collector
          command:
            - /swi-otelcol
            - --config=/conf/relay.yaml
          securityContext: {}
          image: "{{ .Values.otel.image.repository }}:{{ .Values.otel.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.otel.image.pullPolicy }}
          env:
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: SOLARWINDS_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: solarwinds-api-token
                  key: SOLARWINDS_API_TOKEN
                  optional: true
          envFrom:
            - configMapRef:
                name: {{ include "common.fullname" (tuple . "-common-env") }}
{{- if .Values.otel.events.telemetry.metrics.enabled }}
          ports:
            - name: http
              containerPort: {{ (split ":" .Values.otel.events.telemetry.metrics.address)._1 }}
              protocol: TCP
{{- end}}
          livenessProbe:
            httpGet:
              path: /
              port: 13133
          readinessProbe:
            httpGet:
              path: /
              port: 13133
          resources:
{{ toYaml .Values.otel.events.resources | indent 12 }}
          volumeMounts:
            - mountPath: /conf
              name: opentelemetry-collector-configmap
              readOnly: true
      volumes:
        - name: opentelemetry-collector-configmap
          configMap:
            name: {{ include "common.fullname" (tuple . "-events-config") }}
            items:
              - key: events.config
                path: relay.yaml
{{- end}}