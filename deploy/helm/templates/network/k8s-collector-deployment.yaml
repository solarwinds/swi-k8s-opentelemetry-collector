{{- if and .Values.ebpfNetworkMonitoring.enabled .Values.ebpfNetworkMonitoring.k8sCollector.enabled  }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" (tuple . "-network-k8s-collector") }}
  labels:
{{ include "common.labels" . | indent 4 }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: {{ include "common.fullname" (tuple . "-network-k8s-collector") }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ include "common.fullname" (tuple . "-network-k8s-collector") }}
{{ include "common.labels" . | indent 8 }}
{{ include "common.pod-labels" . | indent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/network/configmap.yaml") . | sha256sum }}
        checksum/values: {{ toJson .Values | sha256sum }}
    spec:
      nodeSelector:
        kubernetes.io/os: linux
        kubernetes.io/arch: amd64
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      initContainers:
        - name: wait-for-reducer
          image: "{{ include "common.image" (tuple . .Values.otel.init_images "busy_box" "busybox:1.36.1") }}"
          imagePullPolicy: {{ .Values.otel.init_images.busy_box.pullPolicy }}
          command: ['sh', '-c', 'until nc -zv $EBPF_NET_INTAKE_HOST $EBPF_NET_INTAKE_PORT; do echo "Waiting for reducer endpoint..."; sleep 5; done;']
          env:
            - name: "EBPF_NET_INTAKE_HOST"
              value: "{{ include "common.fullname" (tuple . "-network-k8s-reducer") }}"
            - name: "EBPF_NET_INTAKE_PORT"
              value: "{{ .Values.ebpfNetworkMonitoring.reducer.telemetryPort }}"
      containers:
      - image: "{{ include "common.image" (tuple . .Values.ebpfNetworkMonitoring.k8sCollector.watcher (tuple "image" "ebpf_k8s_watcher") "otel/opentelemetry-ebpf-k8s-watcher:v0.10.0") }}"
        imagePullPolicy: {{ .Values.ebpfNetworkMonitoring.k8sCollector.watcher.image.pullPolicy }}
        name: k8s-watcher
        args:
          - --log-console
          - --log-level={{ .Values.ebpfNetworkMonitoring.k8sCollector.telemetry.logs.level }}
      - image: "{{ include "common.image" (tuple . .Values.ebpfNetworkMonitoring.k8sCollector.relay (tuple "image" "ebpf_k8s_relay") "otel/opentelemetry-ebpf-k8s-relay:v0.10.0") }}"
        imagePullPolicy: {{ .Values.ebpfNetworkMonitoring.k8sCollector.relay.image.pullPolicy }}
        name: k8s-relay
        args:
          - --config-file=/etc/network-explorer/config.yaml
          - --{{ .Values.ebpfNetworkMonitoring.k8sCollector.telemetry.logs.level }}
        env:
          - name: "EBPF_NET_CLUSTER_NAME"
            value: {{ quote .Values.cluster.name }}
          - name: "EBPF_NET_INTAKE_HOST"
            value: "{{ include "common.fullname" (tuple . "-network-k8s-reducer") }}"
          - name: "EBPF_NET_INTAKE_PORT"
            value: "{{ .Values.ebpfNetworkMonitoring.reducer.telemetryPort }}"
          - name: "EBPF_NET_CRASH_METRIC_HOST"
            value: "{{ include "common.fullname" (tuple . "-metrics-collector") }}"
          - name: "EBPF_NET_CRASH_METRIC_PORT"
            value: "{{ .Values.otel.metrics.otlp_endpoint.port }}"
        volumeMounts:
        - mountPath: /etc/network-explorer
          name: k8s-relay-config
      terminationGracePeriodSeconds: 30
      volumes:
      - name: k8s-relay-config
        projected:
          sources:
            - configMap:
                name: {{ include "common.fullname" (tuple . "-network-otel-collector-config") }}
                items:
                - key: config.yaml
                  path: config.yaml
      securityContext: {}
      serviceAccountName: {{ include "common.fullname" . }}
{{- end}}