apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "common.fullname" (tuple . "-events") }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: swo-k8s-collector
{{ include "common.labels" . | indent 4 }}
  annotations:
{{ include "common.annotations" . | indent 4 }}
spec:
  serviceName: {{ include "common.fullname" (tuple . "-events") }}
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "common.fullname" (tuple . "-events") }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/events-collector-config-map.yaml") . | sha256sum }}
        checksum/config_common_env: {{ include (print $.Template.BasePath "/common-env-config-map.yaml") . | sha256sum }}
        checksum/values: {{ toJson .Values | sha256sum }}
{{ include "common.annotations" . | indent 8 }}
{{- if .Values.otel.events.telemetry.metrics.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ .Values.otel.events.telemetry.metrics.port | quote }}
        prometheus.io/path: "/metrics"
        prometheus.io/scheme: "http"
{{- end}}
      labels:
        app.kubernetes.io/name: swo-k8s-collector
{{ include "common.labels" . | indent 8 }}
        app: {{ include "common.fullname" (tuple . "-events") }}
{{ include "common.pod-labels" . | indent 8 }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.otel.events.terminationGracePeriodSeconds }}
      serviceAccountName: {{ include "common.fullname" . }}
      securityContext: 
        fsGroup: 10001
      {{- if .Values.otel.events.nodeSelector }}
      nodeSelector:
      {{ toYaml .Values.otel.events.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.otel.events.tolerations }}
      tolerations:
        {{ toYaml .Values.otel.events.tolerations | nindent 8 }}
      {{- end }}
      affinity:
      {{- if .Values.otel.events.affinity }}
        {{- toYaml .Values.otel.events.affinity | nindent 8 }}
      {{- else }}
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      {{- if include "isSwiEndpointCheckEnabled" . }}
      initContainers:
        - name: otel-endpoint-check
          image: "{{ include "common.image" (tuple . .Values.otel "image" nil (printf "%s-k8s" .Chart.AppVersion)) }}"
          imagePullPolicy: {{ .Values.otel.image.pullPolicy }}
          command:
            - /solarwinds-otel-collector
            - test-connection
            - --endpoint=$(OTEL_ENVOY_ADDRESS)
            - --apitoken=$(SOLARWINDS_API_TOKEN)
            - --clusteruid=$(CLUSTER_UID)
            - --insecure=$(OTEL_ENVOY_ADDRESS_TLS_INSECURE)
          env:
            - name: SOLARWINDS_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ template "common.secret" . }}
                  key: SOLARWINDS_API_TOKEN
                  optional: true
          envFrom:
            - configMapRef:
                name: {{ include "common.fullname" (tuple . "-common-env") }}
      {{- end }}
      containers:
        - name: swi-opentelemetry-collector
          command:
            - /solarwinds-otel-collector
            - --config=/conf/relay.yaml
          securityContext: 
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 10001
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
              - ALL
          image: "{{ include "common.image" (tuple . .Values.otel "image" nil (printf "%s-k8s" .Chart.AppVersion)) }}"
          imagePullPolicy: {{ .Values.otel.image.pullPolicy }}
          env:
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: SOLARWINDS_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ template "common.secret" . }}
                  key: SOLARWINDS_API_TOKEN
                  optional: true
            - name: GOMEMLIMIT
              valueFrom:
                resourceFieldRef:
                  resource: limits.memory
          envFrom:
            - configMapRef:
                name: {{ include "common.fullname" (tuple . "-common-env") }}
{{- if .Values.otel.events.telemetry.metrics.enabled }}
          ports:
            - name: http
              containerPort: {{ .Values.otel.events.telemetry.metrics.port }}
              protocol: TCP
{{- end}}
          livenessProbe:
            httpGet:
              path: /
              port: 13133
          readinessProbe:
            httpGet:
              path: /
              port: 13133
          resources:
{{ toYaml .Values.otel.events.resources | indent 12 }}
          volumeMounts:
            - mountPath: /conf
              name: opentelemetry-collector-configmap
              readOnly: true
{{- if and .Values.otel.manifests.enabled .Values.otel.manifests.persistent_storage.enabled }}
            - name: manifests
              mountPath: /var/lib/swo/manifests
{{- end }}
{{- if .Values.otel.events.sending_queue.offload_to_disk }}
            - name: sending-queue
              mountPath: /var/lib/swo/sending_queue
{{- end }}
      volumes:
        - name: opentelemetry-collector-configmap
          configMap:
            name: {{ include "common.fullname" (tuple . "-events-config") }}
            items:
              - key: events.config
                path: relay.yaml
{{- if and .Values.otel.manifests.enabled .Values.otel.manifests.persistent_storage.enabled }}
        - name: manifests
          persistentVolumeClaim:
            claimName: {{ include "common.fullname" (tuple . "-events") }}
{{- end }} 
{{- if .Values.otel.events.sending_queue.offload_to_disk }}
        - name: sending-queue
          emptyDir: {}
{{- end }} 