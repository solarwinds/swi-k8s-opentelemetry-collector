{{- if or .Values.otel.logs.enabled .Values.otel.metrics.enabled }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "common.fullname" (tuple . "-node-collector") }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: swo-k8s-collector
{{ include "common.labels" . | indent 4 }}
spec:
  selector:
    matchLabels:
      app: {{ include "common.fullname" (tuple . "-node-collector") }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: swo-k8s-collector
        app: {{ include "common.fullname" (tuple . "-node-collector") }}
{{ include "common.labels" . | indent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/node-collector-config-map.yaml") . | sha256sum }}
        checksum/config_common_env: {{ include (print $.Template.BasePath "/common-env-config-map.yaml") . | sha256sum }}
        checksum/values: {{ toJson .Values | sha256sum }}
{{- if .Values.otel.logs.telemetry.metrics.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ (split ":" .Values.otel.logs.telemetry.metrics.address)._1 | quote }}
        prometheus.io/path: "/metrics"
        prometheus.io/scheme: "http"
{{- end}}
    spec:
      terminationGracePeriodSeconds: {{ .Values.otel.node_collector.terminationGracePeriodSeconds }}
      serviceAccountName: {{ include "common.fullname" . }}
      securityContext:
        fsGroup: 0
        runAsUser: 0
        runAsGroup: 0
      tolerations:
      {{- if .Values.otel.logs.tolerations }}
      {{ toYaml .Values.otel.logs.tolerations | nindent 8 }}
      {{- else }}
        - operator: Exists
          effect: NoSchedule
      {{- end }}
      affinity:
      {{- if .Values.otel.logs.affinity }}
      {{- toYaml .Values.otel.logs.affinity | nindent 8 }}
      {{- else }}
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: eks.amazonaws.com/compute-type
                operator: NotIn
                values:
                - fargate
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      {{- end }}
      {{- if .Values.otel.logs.nodeSelector }}
      nodeSelector:
      {{ toYaml .Values.otel.logs.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      containers:
        - name: swi-opentelemetry-collector
          image: "{{ .Values.otel.image.repository }}:{{ .Values.otel.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.otel.image.pullPolicy }}
          command:
            - /wrapper
            - /swi-otelcol
            - --config=/conf/relay.yaml
          env:
            - name: CHECKPOINT_DIR
              value: {{ .Values.otel.logs.filestorage.directory }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: SOLARWINDS_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: solarwinds-api-token
                  key: SOLARWINDS_API_TOKEN
                  optional: true
          envFrom:
            - configMapRef:
                name: {{ include "common.fullname" (tuple . "-common-env") }}
{{- if .Values.otel.logs.telemetry.metrics.enabled }}
          ports:
            - name: http
              containerPort: {{ (split ":" .Values.otel.logs.telemetry.metrics.address)._1 }}
              protocol: TCP
{{- end}}
          livenessProbe:
            httpGet:
              path: /
              port: 13133
          readinessProbe:
            httpGet:
              path: /
              port: 13133
          resources:
{{ toYaml .Values.otel.logs.resources | indent 12 }}
          volumeMounts:
            - mountPath: /var/log/pods
              name: varlogpods
              readOnly: true
            - mountPath: /var/log/containers
              name: varlogcontainers
              readOnly: true
            - mountPath: /var/lib/docker/containers
              name: varlibdockercontainers
              readOnly: true
            - mountPath: /conf
              name: opentelemetry-collector-configmap
              readOnly: true
            - mountPath: /run/log/journal
              name: runlogjournal
              readOnly: true
            - mountPath: /var/log/journal
              name: varlogjournal
              readOnly: true
            - name: logcheckpoints
              mountPath: {{ .Values.otel.logs.filestorage.directory }}
{{- if .Values.otel.node_collector.sending_queue.persistent_storage.enabled }}
            - name: sending-queue
              mountPath: {{ .Values.otel.node_collector.sending_queue.persistent_storage.directory }}
{{- end }}
      volumes:
        - name: varlogpods
          hostPath:
            path: /var/log/pods
        - name: varlogcontainers
          hostPath:
            path: /var/log/containers
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: runlogjournal
          hostPath:
            path: /run/log/journal
        - name: varlogjournal
          hostPath:
            path: /var/log/journal
        - name: logcheckpoints
          hostPath:
            path: {{ printf "%s/%s" .Values.otel.logs.filestorage.directory .Values.cluster.uid }}
            type: DirectoryOrCreate
        - name: opentelemetry-collector-configmap
          configMap:
            name: {{ include "common.fullname" (tuple . "-node-collector-config") }}
            items:
              - key: logs.config
                path: relay.yaml
{{- if .Values.otel.node_collector.sending_queue.persistent_storage.enabled }}
        - name: sending-queue
          hostPath:
            path: {{ printf "%s/%s" .Values.otel.node_collector.sending_queue.persistent_storage.directory .Values.cluster.uid }}
            type: DirectoryOrCreate
{{- end }}
{{- end }}