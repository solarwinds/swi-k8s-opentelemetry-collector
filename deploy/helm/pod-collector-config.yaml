exporters:
  otlp:
    endpoint: ${OTEL_ENVOY_ADDRESS}
    tls:
      insecure: ${OTEL_ENVOY_ADDRESS_TLS_INSECURE}
    headers:
      "Authorization": "Bearer ${SOLARWINDS_API_TOKEN}"
    retry_on_failure:
      enabled: {{ .Values.otel.node_collector.retry_on_failure.enabled }}
      initial_interval: {{ .Values.otel.node_collector.retry_on_failure.initial_interval }}
      max_interval: {{ .Values.otel.node_collector.retry_on_failure.max_interval }}
      max_elapsed_time: {{ .Values.otel.node_collector.retry_on_failure.max_elapsed_time }}
    sending_queue:
      enabled: {{ .Values.otel.node_collector.sending_queue.enabled }}
      num_consumers: {{ .Values.otel.node_collector.sending_queue.num_consumers }}
      queue_size: {{ .Values.otel.node_collector.sending_queue.queue_size }}
    timeout: {{ .Values.otel.node_collector.timeout }}
extensions:
  health_check:
    endpoint: 0.0.0.0:13133
{{- if .Values.otel.logs.memory_ballast }}
  memory_ballast:
{{ toYaml .Values.otel.logs.memory_ballast | indent 4 }}
{{- end }}

processors:
  memory_limiter:
{{ toYaml .Values.otel.logs.memory_limiter | indent 4 }}

  {{- include "common-config.filter-reciever" . | nindent 2 }}
  {{- include "common-config.filter-remove-internal" . | nindent 2 }}
  {{- include "common-config.attributes-remove-prometheus-attributes" . | nindent 2 }}

  # unify attributes
  attributes/unify_node_attribute:
    include:
      match_type: regexp
      metric_names:
        - container_.*
    actions:
      - key: k8s.node.name
        from_attribute: node
        action: insert
{{- if not .Values.aws_fargate.enabled }}
      - key: k8s.node.name
        from_attribute: kubernetes_io_hostname
        action: insert
{{- end }}

  {{- include "common-config.transform-node-attributes" . | nindent 2 }}

  metricstransform/preprocessing:
    transforms:
      {{- include "common-config.metricstransform-preprocessing-cadvisor" . | nindent 6 }}

  {{- include "common-config.filter-remove-internal-post-processing" . | nindent 2 }}
  {{- include "common-config.attributes-remove-temp" . | nindent 2 }}

  cumulativetodelta/cadvisor:
    include:
      metrics:
        {{- include "common-config.cumulativetorate-cadvisor" . | nindent 8 }}
      match_type: strict

  deltatorate/cadvisor:
    metrics:
      {{- include "common-config.cumulativetorate-cadvisor" . | nindent 6}}

  {{- include "common-config.groupbyattrs-node" . | nindent 2 }}
  {{- include "common-config.groupbyattrs-pod" . | nindent 2 }}
  {{- include "common-config.groupbyattrs-all" . | nindent 2 }}

{{- if .Values.otel.metrics.filter }}
  filter/metrics:
    metrics:
{{ toYaml .Values.otel.metrics.filter | indent 6 }}
{{- end }}

{{- include "common-config.filter-remove-temporary-metrics" . | nindent 2 }}

  {{- include "common-config.resource-metrics" . | nindent 2 }}

{{- if not (empty .Values.otel.logs.k8s_instrumentation.labels.excludePattern) }}
  resource/swk8sattributes_logs_labels_filter:
    attributes:
      - action: delete
        pattern: {{ .Values.otel.logs.k8s_instrumentation.labels.excludePattern }}
{{- end }}
{{- if not (empty .Values.otel.logs.k8s_instrumentation.annotations.excludePattern) }}
  resource/swk8sattributes_logs_annotations_filter:
    attributes:
      - action: delete
        pattern: {{ .Values.otel.logs.k8s_instrumentation.annotations.excludePattern }}
{{- end }}

  groupbyattrs/common-all:
    keys:
      - k8s.container.name
      - k8s.namespace.name
      - k8s.pod.name
      - k8s.pod.uid
      - host.name
      - service.name

  resource/all:
    attributes:

      # Collector and Manifest version
      - key: sw.k8s.agent.manifest.version
        value: ${MANIFEST_VERSION}
        action: insert

      - key: sw.k8s.agent.app.version
        value: ${APP_VERSION}
        action: insert

      # Cluster
      - key: sw.k8s.cluster.uid
        value: ${CLUSTER_UID}
        action: insert

      - key: k8s.cluster.name
        value: ${CLUSTER_NAME}
        action: insert

      # Node
      - key: k8s.node.name
        value: ${NODE_NAME}
        action: upsert

  resource/container:
    attributes:

      - key: sw.k8s.log.type
        value: container
        action: insert

      # Collector and Manifest version
      - key: sw.k8s.agent.manifest.version
        value: ${MANIFEST_VERSION}
        action: insert

      - key: sw.k8s.agent.app.version
        value: ${APP_VERSION}
        action: insert

      # Cluster
      - key: sw.k8s.cluster.uid
        value: ${CLUSTER_UID}
        action: insert

      - key: k8s.cluster.name
        value: ${CLUSTER_NAME}
        action: insert

      # Node
      - key: k8s.node.name
        value: ${NODE_NAME}
        action: insert
{{- if and (not .isWindows) .Values.otel.logs.journal }}
  resource/journal:
    attributes:

      - key: sw.k8s.log.type
        value: journal
        action: insert

      # Collector and Manifest version
      - key: sw.k8s.agent.manifest.version
        value: ${MANIFEST_VERSION}
        action: insert

      - key: sw.k8s.agent.app.version
        value: ${APP_VERSION}
        action: insert

      # Cluster
      - key: sw.k8s.cluster.uid
        value: ${CLUSTER_UID}
        action: insert

      - key: k8s.cluster.name
        value: ${CLUSTER_NAME}
        action: insert

      # Node
      - key: k8s.node.name
        value: ${NODE_NAME}
        action: insert
{{- end }}
  transform/syslogify:
    error_mode: ignore
    log_statements:
      - context: log
        statements:
          - set( attributes["host.name"], attributes["k8s.pod.name"])
          - set( attributes["service.name"], attributes["k8s.container.name"])

  batch/logs:
{{ toYaml .Values.otel.logs.batch | indent 4 }}

  batch/metrics:
{{ toYaml .Values.otel.metrics.batch | indent 4 }}

  metricstransform/rename:
    transforms:
      # add `k8s.` prefix to all metrics
      - include: ^(.*)$$
        match_type: regexp
        action: update
        new_name: k8s.$${1}

{{- if .Values.otel.metrics.autodiscovery.prometheusEndpoints.customTransformations.counterToRate }}
  cumulativetodelta/discovery:
    include:
      metrics:
{{- range .Values.otel.metrics.autodiscovery.prometheusEndpoints.customTransformations.counterToRate }}
        - {{ . }}
{{- end }}
      match_type: strict
  deltatorate/discovery:
    metrics:
{{- range .Values.otel.metrics.autodiscovery.prometheusEndpoints.customTransformations.counterToRate }}
      - {{ . }}
{{- end }}
{{- end }}

{{- if .Values.otel.metrics.autodiscovery.prometheusEndpoints.filter }}
  filter/metrics-discovery:
    metrics:
{{ toYaml .Values.otel.metrics.autodiscovery.prometheusEndpoints.filter | indent 6 }}
{{- end }}

  filter/histograms:
    metrics:
      metric:
        - 'type == METRIC_DATA_TYPE_HISTOGRAM'

  transform/istio-metrics:
    metric_statements:
      - context: metric
        statements:
          - extract_sum_metric(true) where (name == "k8s.istio_request_bytes" or name == "k8s.istio_response_bytes" or name == "k8s.istio_request_duration_milliseconds")
          - extract_count_metric(true) where (name == "k8s.istio_request_duration_milliseconds")
          - set(name, "k8s.istio_request_bytes.rate") where name == "k8s.istio_request_bytes_sum"
          - set(name, "k8s.istio_response_bytes.rate") where name == "k8s.istio_response_bytes_sum"
          - set(name, "k8s.istio_requests.rate") where name == "k8s.istio_requests_total"
          - set(name, "k8s.istio_tcp_sent_bytes.rate") where name == "k8s.istio_tcp_sent_bytes_total"
          - set(name, "k8s.istio_tcp_received_bytes.rate") where name == "k8s.istio_tcp_received_bytes_total"
          - set(name, "k8s.istio_request_duration_milliseconds_sum_temp") where name == "k8s.istio_request_duration_milliseconds_sum"
          - set(name, "k8s.istio_request_duration_milliseconds_count_temp") where name == "k8s.istio_request_duration_milliseconds_count"
  
  metricstransform/istio-metrics:
    transforms:
      - include: k8s.istio_request_bytes.rate
        action: insert
        new_name: k8s.istio_request_bytes.delta
      - include: k8s.istio_response_bytes.rate
        action: insert
        new_name: k8s.istio_response_bytes.delta
      - include: k8s.istio_requests.rate
        action: insert
        new_name: k8s.istio_requests.delta
      - include: k8s.istio_tcp_sent_bytes.rate
        action: insert
        new_name: k8s.istio_tcp_sent_bytes.delta
      - include: k8s.istio_tcp_received_bytes.rate
        action: insert
        new_name: k8s.istio_tcp_received_bytes.delta

  cumulativetodelta/istio-metrics:
    include:
      metrics:
        - k8s.istio_request_bytes.rate
        - k8s.istio_response_bytes.rate
        - k8s.istio_request_duration_milliseconds_sum_temp
        - k8s.istio_request_duration_milliseconds_count_temp
        - k8s.istio_requests.rate
        - k8s.istio_tcp_sent_bytes.rate
        - k8s.istio_tcp_received_bytes.rate
        - k8s.istio_request_bytes.delta
        - k8s.istio_response_bytes.delta
        - k8s.istio_requests.delta
        - k8s.istio_tcp_sent_bytes.delta
        - k8s.istio_tcp_received_bytes.delta
      match_type: strict

  deltatorate/istio-metrics:
    metrics:
      - k8s.istio_request_bytes.rate
      - k8s.istio_response_bytes.rate
      - k8s.istio_request_duration_milliseconds_sum_temp
      - k8s.istio_request_duration_milliseconds_count_temp
      - k8s.istio_requests.rate
      - k8s.istio_tcp_sent_bytes.rate
      - k8s.istio_tcp_received_bytes.rate

  experimental_metricsgeneration/istio-metrics:
    rules:
      - name: k8s.istio_request_duration_milliseconds.rate
        type: calculate
        metric1: k8s.istio_request_duration_milliseconds_sum_temp
        metric2: k8s.istio_request_duration_milliseconds_count_temp
        operation: divide


connectors:
{{- if and .Values.otel.metrics.enabled (or (not .Values.aws_fargate.enabled) .Values.otel.metrics.autodiscovery.prometheusEndpoints.enabled) }}
  forward/metric-exporter:
{{- end }}
{{- if and .Values.otel.logs.enabled (or .Values.otel.logs.container (and (not .isWindows) .Values.otel.logs.journal))}}
  forward/logs-exporter:
{{- end }}

receivers:
  prometheus/discovery:
    config:
      scrape_configs:
        - job_name: pod
          scheme: "http"
          scrape_interval: {{ quote .Values.otel.metrics.prometheus.scrape_interval }}
          metrics_path: '/metrics'
          honor_timestamps: false
          honor_labels: true
          static_configs:
            - targets:
                - 'localhost:9090'

service:
  extensions:
    - health_check
{{- if .Values.otel.logs.memory_ballast }}
    - memory_ballast
{{- end}}
  pipelines:
{{- if and .Values.otel.metrics.enabled .Values.otel.metrics.autodiscovery.prometheusEndpoints.enabled }}
    metrics/discovery:
      exporters:
        - otlp
      processors:
        - memory_limiter
{{- if .Values.otel.metrics.autodiscovery.prometheusEndpoints.filter }}
        - filter/metrics-discovery
{{- end }}
        - metricstransform/rename
        - transform/istio-metrics
        - metricstransform/istio-metrics
        - cumulativetodelta/istio-metrics
        - deltatorate/istio-metrics
        - experimental_metricsgeneration/istio-metrics
{{- if .Values.otel.metrics.autodiscovery.prometheusEndpoints.customTransformations.counterToRate }}
        - cumulativetodelta/discovery
        - deltatorate/discovery
{{- end }}
        - groupbyattrs/common-all
        - resource/all
      receivers:
        - prometheus/discovery
{{- end }}
  telemetry:
{{- if .Values.otel.logs.telemetry.logs.enabled }}
    logs:
      level: {{ .Values.otel.logs.telemetry.logs.level }}
{{- end }}
{{- if .Values.otel.logs.telemetry.metrics.enabled }}
    metrics:
      address: {{ .Values.otel.logs.telemetry.metrics.address }}
{{- end }}
