{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "description": "Configuration validation schema for Helm chart swo-k8s-collector. For more information, see https://github.com/solarwinds/swi-k8s-opentelemetry-collector/blob/master/deploy/helm/values.yaml.",
    "type": "object",
    "definitions": {
        "collectorBatch": {
            "description": "Batching configuration for OTEL collector. More info: https://github.com/open-telemetry/opentelemetry-collector/tree/main/processor/batchprocessor/README.md.",
            "type": "object",
            "properties": {
                "send_batch_max_size": {
                    "type": "integer"
                },
                "send_batch_size": {
                    "type": "integer"
                },
                "timeout": {
                    "type": "string"
                }
            }
        },
        "collectorK8sLabelsAnnotationsInstrumentation": {
            "description": "Label and Annotation instrumentation configuration for OTEL collector.",
            "type": "object",
            "properties": {
                "annotations": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        },
                        "excludePattern": {
                            "type": "string"
                        }
                    },
                    "additionalProperties": false
                },
                "labels": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        },
                        "excludePattern": {
                            "type": "string"
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": false
        },
        "collectorMemoryBallast": {
            "description": "Memory ballast configuration for OTEL collector. More info: https://github.com/open-telemetry/opentelemetry-collector/tree/main/extension/ballastextension/README.md.",
            "type": "object",
            "properties": {
                "size_mib": {
                    "type": "integer"
                }
            }
        },
        "collectorMemoryLimiter": {
            "description": "Memory limiter configuration for OTEL collector. More info: https://github.com/open-telemetry/opentelemetry-collector/tree/main/processor/memorylimiterprocessor/README.md.",
            "type": "object",
            "properties": {
                "check_interval": {
                    "type": "string"
                },
                "limit_mib": {
                    "type": "integer"
                },
                "spike_limit_mib": {
                    "type": "integer"
                }
            }
        },
        "collectorRetryOnFailure": {
            "description": "Retry configuration for sending data to OTEL endpoint. More info: https://github.com/open-telemetry/opentelemetry-collector/blob/main/exporter/exporterhelper/README.md.",
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "initial_interval": {
                    "type": "string"
                },
                "max_elapsed_time": {
                    "type": "string"
                },
                "max_interval": {
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "collectorSendingQueue": {
            "description": "Send configuration for sending data to OTEL endpoint. More info: https://github.com/open-telemetry/opentelemetry-collector/blob/main/exporter/exporterhelper/README.md.",
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "num_consumers": {
                    "type": "integer"
                },
                "queue_size": {
                    "type": "integer"
                }
            }
        },
        "collectorTimeout": {
            "description": "Timeout for each attempt to send data to OTEL endpoint. More info: https://github.com/open-telemetry/opentelemetry-collector/blob/main/exporter/exporterhelper/README.md.",
            "type": "string"
        },
        "collectorTelemetry": {
            "description": "Telemetry configuration for OTEL collector. More info: https://github.com/open-telemetry/opentelemetry.io/blob/main/content/en/docs/collector/configuration.md#telemetry.",
            "type": "object",
            "properties": {
                "logs": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        },
                        "level": {
                            "type": "string"
                        }
                    },
                    "additionalProperties": false
                },
                "metrics": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        },
                        "address": {
                            "type": "string"
                        },
                        "podMonitor": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean"
                                },
                                "additionalLabels": {
                                    "$ref": "#/definitions/k8sLabels"
                                },
                                "interval": {
                                    "type": "string"
                                },
                                "namespace": {
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                },
                                "scrapeTimeout": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": false
        },
        "ebpfTelemetry": {
            "description": "Telemetry configuration for opentelemetry-network.",
            "type": "object",
            "properties": {
                "logs": {
                    "type": "object",
                    "properties": {
                        "level": {
                            "type": "string"
                        }
                    },
                    "additionalProperties": false
                }
            }
        },
        "imageDefinition": {
            "description": "Container image definition.",
            "type": "object",
            "properties": {
                "repository": {
                    "description": "Image repository. Example: `solarwinds/swi-opentelemetry-collector`, `docker.io/solarwinds/swi-opentelemetry-collector`, `docker.io/solarwinds/swi-opentelemetry-collector:0.9.2`.",
                    "type": "string"
                },
                "tag": {
                    "description": "Image tag. Example: `0.9.2` - use when the `repository` does not already include `tag`.",
                    "type": "string"
                },
                "pullPolicy": {
                    "$ref": "#/definitions/k8sImagePullPolicy"
                }
            },
            "additionalProperties": false
        },
        "imageDigest": {
            "description": "Image digest.",
            "type": "string"
        },
        "imageRegistry": {
            "description": "Image registry.",
            "type": "string"
        },
        "imageRepository": {
            "description": "Image repository.",
            "type": "string"
        },
        "imageTag": {
            "description": "Image tag.",
            "type": "string"
        },
        "k8sAffinity": {
            "description": "Scheduling affinity. More info: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity.",
            "type": "object",
            "properties": {
                "nodeAffinity": {
                    "type": "object"
                },
                "podAffinity": {
                    "type": "object"
                },
                "podAntiAffinity": {
                    "type": "object"
                }
            }
        },
        "k8sImagePullPolicy": {
            "description": "Image pull policy. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images.",
            "type": [
                "string",
                "null"
            ],
            "enum": [
                "Always",
                "Never",
                "IfNotPresent",
                ""
            ]
        },
        "k8sLabels": {
            "description": "Kubernetes labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "k8sNodeSelector": {
            "description": "NodeSelector definition. More info: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector",
            "$ref": "#/definitions/k8sLabels"
        },
        "k8sResourceRequirements": {
            "description": "Container resource requirements. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/.",
            "type": "object",
            "properties": {
                "limits": {
                    "type": "object",
                    "additionalProperties": {
                        "type": [
                            "string",
                            "number"
                        ]
                    }
                },
                "requests": {
                    "type": "object",
                    "additionalProperties": {
                        "type": [
                            "string",
                            "number"
                        ]
                    }
                }
            }
        },
        "k8sTerminationGracePeriod": {
            "description": "Pod graceful termination period. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#pod-termination.",
            "type": "integer"
        },
        "k8sTolerations": {
            "description": "Pod tolerations. More info: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/.",
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "effect": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "operator": {
                        "type": "string"
                    },
                    "tolerationSeconds": {
                        "type": "integer"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            }
        },
        "port": {
            "description": "Port number.",
            "type": "integer"
        },
        "schedule": {
            "description": "Schedule in Cron format. More info: https://en.wikipedia.org/wiki/Cron.",
            "type": "string"
        }
    },
    "properties": {
        "autoupdate": {
            "description": "If enabled it creates CronJob that will periodically check for new versions of the Helm chart and upgrade if available.",
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "devel": {
                    "type": "boolean"
                },
                "image": {
                    "$ref": "#/definitions/imageDefinition"
                },
                "schedule": {
                    "$ref": "#/definitions/schedule"
                }
            },
            "additionalProperties": false
        },
        "aws_fargate": {
            "description": "Enable support for AWS EKS Fargate environment.",
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "logs": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        },
                        "filters": {
                            "type": "string"
                        },
                        "region": {
                            "type": [
                                "string",
                                "null"
                            ]
                        }
                    },
                    "additionalProperties": false
                }
            },
            "if": {
                "properties": {
                    "enabled": {
                        "const": true
                    },
                    "logs": {
                        "properties": {
                            "enabled": {
                                "const": true
                            }
                        }
                    }
                }
            },
            "then": {
                "properties": {
                    "logs": {
                        "properties": {
                            "region": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "region"
                        ]
                    }
                }
            },
            "additionalProperties": false
        },
        "cluster": {
            "type": "object",
            "description": "Cluster identification.",
            "properties": {
                "name": {
                    "description": "The display name for the cluster entity in SolarWinds Observability.",
                    "type": "string"
                },
                "uid": {
                    "description": "A unique ID that follows the following format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "uid"
            ],
            "additionalProperties": false
        },
        "commonLabels": {
            "$ref": "#/definitions/k8sLabels"
        },
        "ebpfNetworkMonitoring": {
            "description": "If enabled, deploys opentelemetry-network monitoring to the cluster.",
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "k8sCollector": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        },
                        "relay": {
                            "type": "object",
                            "properties": {
                                "image": {
                                    "$ref": "#/definitions/imageDefinition"
                                }
                            },
                            "additionalProperties": false
                        },
                        "telemetry": {
                            "$ref": "#/definitions/ebpfTelemetry"
                        },
                        "watcher": {
                            "type": "object",
                            "properties": {
                                "image": {
                                    "$ref": "#/definitions/imageDefinition"
                                }
                            },
                            "additionalProperties": false
                        }
                    },
                    "additionalProperties": false
                },
                "kernelCollector": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        },
                        "affinity": {
                            "$ref": "#/definitions/k8sAffinity"
                        },
                        "image": {
                            "$ref": "#/definitions/imageDefinition"
                        },
                        "nodeSelector": {
                            "$ref": "#/definitions/k8sNodeSelector"
                        },
                        "resources": {
                            "$ref": "#/definitions/k8sResourceRequirements"
                        },
                        "telemetry": {
                            "$ref": "#/definitions/ebpfTelemetry"
                        },
                        "tolerations": {
                            "$ref": "#/definitions/k8sTolerations"
                        }
                    },
                    "additionalProperties": false
                },
                "reducer": {
                    "type": "object",
                    "properties": {
                        "disableMetrics": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "enableIdIdGeneration": {
                            "type": "boolean"
                        },
                        "enableMetrics": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "image": {
                            "$ref": "#/definitions/imageDefinition"
                        },
                        "numAggregationShards": {
                            "type": "integer"
                        },
                        "numIngestShards": {
                            "type": "integer"
                        },
                        "numMatchingShards": {
                            "type": "integer"
                        },
                        "telemetry": {
                            "type": "object",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ebpfTelemetry"
                                },
                                {
                                    "properties": {
                                        "metrics": {
                                            "type": "object",
                                            "properties": {
                                                "enabled": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "additionalProperties": false
                                        }
                                    }
                                }
                            ]
                        },
                        "telemetryPort": {
                            "$ref": "#/definitions/port"
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": false
        },
        "fullnameOverride": {
            "type": "string"
        },
        "imagePullSecrets": {
            "type": "array"
        },
        "kube-state-metrics": {
            "description": "If enabled, deploys kube-state-metrics to the cluster.",
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "image": {
                    "type": "object",
                    "registry": {
                        "$ref": "#/definitions/imageRegistry"
                    },
                    "repository": {
                        "$ref": "#/definitions/imageRepository"
                    },
                    "tag": {
                        "$ref": "#/definitions/imageTag"
                    },
                    "pullPolicy": {
                        "$ref": "#/definitions/k8sImagePullPolicy"
                    },
                    "sha": {
                        "$ref": "#/definitions/imageDigest"
                    }
                }
            }
        },
        "nameOverride": {
            "type": "string"
        },
        "opencost": {
            "description": "If enabled, deploys opencost to the cluster.",
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "opencost": {
                    "type": "object",
                    "properties": {
                        "exporter": {
                            "type": "object",
                            "properties": {
                                "image": {
                                    "type": "object",
                                    "properties": {
                                        "pullPolicy": {
                                            "$ref": "#/definitions/k8sImagePullPolicy"
                                        },
                                        "registry": {
                                            "$ref": "#/definitions/imageRegistry"
                                        },
                                        "repository": {
                                            "$ref": "#/definitions/imageRepository"
                                        },
                                        "tag": {
                                            "$ref": "#/definitions/imageTag"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "operator": {
            "description": "If enabled, deploys opentelemetry operator to the cluster.",
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "manager": {
                    "type": "object",
                    "default": {},
                    "title": "The manager Schema",
                    "required": [
                        "image",
                        "collectorImage"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "image": {
                            "type": "object",
                            "default": {},
                            "title": "The image Schema",
                            "required": [
                                "repository",
                                "tag"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "repository": {
                                    "type": "string",
                                    "default": "",
                                    "title": "The repository Schema",
                                    "examples": [
                                        "ghcr.io/open-telemetry/opentelemetry-operator/opentelemetry-operator"
                                    ]
                                },
                                "tag": {
                                    "type": "string",
                                    "default": "",
                                    "title": "The tag Schema",
                                    "examples": [
                                        "v0.93.0"
                                    ]
                                }
                            },
                            "examples": [{
                                "repository": "ghcr.io/open-telemetry/opentelemetry-operator/opentelemetry-operator",
                                "tag": "v0.93.0"
                            }]
                        },
                        "collectorImage": {
                            "type": "object",
                            "default": {},
                            "title": "The collectorImage Schema",
                            "required": [
                                "repository",
                                "tag"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "repository": {
                                    "type": "string",
                                    "default": "",
                                    "title": "The repository Schema",
                                    "examples": [
                                        "otel/opentelemetry-collector-contrib"
                                    ]
                                },
                                "tag": {
                                    "type": "string",
                                    "default": "",
                                    "title": "The tag Schema",
                                    "examples": [
                                        "0.93.0"
                                    ]
                                }
                            },
                            "examples": [{
                                "repository": "otel/opentelemetry-collector-contrib",
                                "tag": "0.93.0"
                            }]
                        },
                        "opampBridgeImage": {
                            "type": "object",
                            "default": {},
                            "title": "The opampBridgeImage Schema",
                            "required": [
                                "repository",
                                "tag"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "repository": {
                                    "type": "string",
                                    "default": "",
                                    "title": "The repository Schema",
                                    "examples": [
                                        ""
                                    ]
                                },
                                "tag": {
                                    "type": "string",
                                    "default": "",
                                    "title": "The tag Schema",
                                    "examples": [
                                        ""
                                    ]
                                }
                            },
                            "examples": [{
                                "repository": "",
                                "tag": ""
                            }]
                        },
                        "targetAllocatorImage": {
                            "type": "object",
                            "default": {},
                            "title": "The targetAllocatorImage Schema",
                            "required": [
                                "repository",
                                "tag"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "repository": {
                                    "type": "string",
                                    "default": "",
                                    "title": "The repository Schema",
                                    "examples": [
                                        ""
                                    ]
                                },
                                "tag": {
                                    "type": "string",
                                    "default": "",
                                    "title": "The tag Schema",
                                    "examples": [
                                        ""
                                    ]
                                }
                            },
                            "examples": [{
                                "repository": "",
                                "tag": ""
                            }]
                        },
                        "autoInstrumentationImage": {
                            "type": "object",
                            "default": {},
                            "title": "The autoInstrumentationImage Schema",
                            "required": [
                                "java",
                                "nodejs",
                                "python",
                                "dotnet",
                                "go",
                                "apacheHttpd"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "java": {
                                    "type": "object",
                                    "default": {},
                                    "title": "The java Schema",
                                    "required": [
                                        "repository",
                                        "tag"
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                        "repository": {
                                            "type": "string",
                                            "default": "",
                                            "title": "The repository Schema",
                                            "examples": [
                                                ""
                                            ]
                                        },
                                        "tag": {
                                            "type": "string",
                                            "default": "",
                                            "title": "The tag Schema",
                                            "examples": [
                                                ""
                                            ]
                                        }
                                    },
                                    "examples": [{
                                        "repository": "",
                                        "tag": ""
                                    }]
                                },
                                "nodejs": {
                                    "type": "object",
                                    "default": {},
                                    "title": "The nodejs Schema",
                                    "required": [
                                        "repository",
                                        "tag"
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                        "repository": {
                                            "type": "string",
                                            "default": "",
                                            "title": "The repository Schema",
                                            "examples": [
                                                ""
                                            ]
                                        },
                                        "tag": {
                                            "type": "string",
                                            "default": "",
                                            "title": "The tag Schema",
                                            "examples": [
                                                ""
                                            ]
                                        }
                                    },
                                    "examples": [{
                                        "repository": "",
                                        "tag": ""
                                    }]
                                },
                                "python": {
                                    "type": "object",
                                    "default": {},
                                    "title": "The python Schema",
                                    "required": [
                                        "repository",
                                        "tag"
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                        "repository": {
                                            "type": "string",
                                            "default": "",
                                            "title": "The repository Schema",
                                            "examples": [
                                                ""
                                            ]
                                        },
                                        "tag": {
                                            "type": "string",
                                            "default": "",
                                            "title": "The tag Schema",
                                            "examples": [
                                                ""
                                            ]
                                        }
                                    },
                                    "examples": [{
                                        "repository": "",
                                        "tag": ""
                                    }]
                                },
                                "dotnet": {
                                    "type": "object",
                                    "default": {},
                                    "title": "The dotnet Schema",
                                    "required": [
                                        "repository",
                                        "tag"
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                        "repository": {
                                            "type": "string",
                                            "default": "",
                                            "title": "The repository Schema",
                                            "examples": [
                                                ""
                                            ]
                                        },
                                        "tag": {
                                            "type": "string",
                                            "default": "",
                                            "title": "The tag Schema",
                                            "examples": [
                                                ""
                                            ]
                                        }
                                    },
                                    "examples": [{
                                        "repository": "",
                                        "tag": ""
                                    }]
                                },
                                "go": {
                                    "type": "object",
                                    "default": {},
                                    "title": "The go Schema",
                                    "required": [
                                        "repository",
                                        "tag"
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                        "repository": {
                                            "type": "string",
                                            "default": "",
                                            "title": "The repository Schema",
                                            "examples": [
                                                ""
                                            ]
                                        },
                                        "tag": {
                                            "type": "string",
                                            "default": "",
                                            "title": "The tag Schema",
                                            "examples": [
                                                ""
                                            ]
                                        }
                                    },
                                    "examples": [{
                                        "repository": "",
                                        "tag": ""
                                    }]
                                },
                                "apacheHttpd": {
                                    "type": "object",
                                    "default": {},
                                    "title": "The apache-httpd Schema",
                                    "required": [
                                        "repository",
                                        "tag"
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                        "repository": {
                                            "type": "string",
                                            "default": "",
                                            "title": "The repository Schema",
                                            "examples": [
                                                ""
                                            ]
                                        },
                                        "tag": {
                                            "type": "string",
                                            "default": "",
                                            "title": "The tag Schema",
                                            "examples": [
                                                ""
                                            ]
                                        }
                                    },
                                    "examples": [{
                                        "repository": "",
                                        "tag": ""
                                    }]
                                }
                            },
                            "examples": [{
                                "java": {
                                    "repository": "",
                                    "tag": ""
                                },
                                "nodejs": {
                                    "repository": "",
                                    "tag": ""
                                },
                                "python": {
                                    "repository": "",
                                    "tag": ""
                                },
                                "dotnet": {
                                    "repository": "",
                                    "tag": ""
                                },
                                "go": {
                                    "repository": "",
                                    "tag": ""
                                },
                                "apacheHttpd": {
                                    "repository": "",
                                    "tag": ""
                                }
                            }]
                        },
                        "featureGates": {
                            "type": "string",
                            "default": "",
                            "title": "The featureGates Schema",
                            "examples": [
                                ""
                            ]
                        },
                        "ports": {
                            "type": "object",
                            "default": {},
                            "title": "The ports Schema",
                            "required": [
                                "metricsPort",
                                "webhookPort",
                                "healthzPort"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "metricsPort": {
                                    "type": "integer",
                                    "default": 0,
                                    "title": "The metricsPort Schema",
                                    "examples": [
                                        8080
                                    ]
                                },
                                "webhookPort": {
                                    "type": "integer",
                                    "default": 0,
                                    "title": "The webhookPort Schema",
                                    "examples": [
                                        9443
                                    ]
                                },
                                "healthzPort": {
                                    "type": "integer",
                                    "default": 0,
                                    "title": "The healthzPort Schema",
                                    "examples": [
                                        8081
                                    ]
                                }
                            },
                            "examples": [{
                                "metricsPort": 8080,
                                "webhookPort": 9443,
                                "healthzPort": 8081
                            }]
                        },
                        "resources": {
                            "type": "object",
                            "default": {},
                            "title": "The resources Schema",
                            "required": [
                                "limits",
                                "requests"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "limits": {
                                    "type": "object",
                                    "default": {},
                                    "title": "The limits Schema",
                                    "required": [],
                                    "additionalProperties": false,
                                    "properties": {
                                        "cpu": {
                                            "type": "string",
                                            "default": "",
                                            "title": "The cpu Schema",
                                            "examples": [
                                                "100m"
                                            ]
                                        },
                                        "memory": {
                                            "type": "string",
                                            "default": "",
                                            "title": "The memory Schema",
                                            "examples": [
                                                "128Mi"
                                            ]
                                        },
                                        "ephemeral-storage": {
                                            "type": "string",
                                            "default": "",
                                            "title": "The ephemeral-storage Schema",
                                            "examples": [
                                                "50Mi"
                                            ]
                                        }
                                    },
                                    "examples": [{
                                        "cpu": "100m",
                                        "memory": "128Mi"
                                    }]
                                },
                                "requests": {
                                    "type": "object",
                                    "default": {},
                                    "title": "The requests Schema",
                                    "required": [
                                        "cpu",
                                        "memory"
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                        "cpu": {
                                            "type": "string",
                                            "default": "",
                                            "title": "The cpu Schema",
                                            "examples": [
                                                "100m"
                                            ]
                                        },
                                        "memory": {
                                            "type": "string",
                                            "default": "",
                                            "title": "The memory Schema",
                                            "examples": [
                                                "64Mi"
                                            ]
                                        },
                                        "ephemeral-storage": {
                                            "type": "string",
                                            "default": "",
                                            "title": "The ephemeral-storage Schema",
                                            "examples": [
                                                "50Mi"
                                            ]
                                        }
                                    },
                                    "examples": [{
                                        "cpu": "100m",
                                        "memory": "64Mi"
                                    }]
                                }
                            },
                            "examples": [{
                                "limits": {
                                    "cpu": "100m",
                                    "memory": "128Mi"
                                },
                                "requests": {
                                    "cpu": "100m",
                                    "memory": "64Mi"
                                }
                            }]
                        },
                        "env": {
                            "type": "object",
                            "default": {},
                            "title": "The env Schema",
                            "additionalProperties": {
                            "type": "string"
                            },
                            "examples": [{
                                "ENABLE_WEBHOOKS": "true"
                            }]
                        },
                        "serviceAccount": {
                            "type": "object",
                            "default": {},
                            "title": "The serviceAccount Schema",
                            "required": [
                                "create",
                                "annotations"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "create": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "The create Schema",
                                    "examples": [
                                        true
                                    ]
                                },
                                "annotations": {
                                    "type": "object",
                                    "default": {},
                                    "title": "The annotations Schema",
                                    "required": [],
                                    "properties": {},
                                    "examples": [{}]
                                },
                                "name": {
                                    "type": "string",
                                    "default": "",
                                    "title": "The name of the service account",
                                    "examples": [
                                        "opentelemetry-operator"
                                    ]
                                }
                            },
                            "examples": [{
                                "create": true,
                                "annotations": {}
                            }]
                        },
                        "serviceMonitor": {
                        "type": "object",
                        "default": {},
                        "title": "The serviceMonitor Schema",
                        "required": [
                            "enabled",
                            "extraLabels",
                            "annotations",
                            "metricsEndpoints",
                            "relabelings",
                            "metricRelabelings"
                        ],
                        "properties": {
                            "enabled": {
                                "type": "boolean",
                                "default": false,
                                "title": "The enabled Schema",
                                "examples": [
                                    true
                                ]
                            },
                            "extraLabels": {
                                "type": "object",
                                "default": {},
                                "title": "The extraLabels Schema",
                                "required": [],
                                "properties": {},
                                "examples": [{}]
                            },
                            "annotations": {
                                "type": "object",
                                "default": {},
                                "title": "The annotations Schema",
                                "required": [],
                                "properties": {},
                                "examples": [{}]
                            },
                            "metricsEndpoints": {
                                "type": "array",
                                "default": [],
                                "title": "The metricsEndpoints Schema",
                                "items": {
                                    "type": "object",
                                    "default": {},
                                    "title": "A Schema",
                                    "required": [
                                        "port"
                                    ],
                                    "properties": {
                                        "port": {
                                            "type": "string",
                                            "default": "",
                                            "title": "The port Schema",
                                            "examples": [
                                                "metrics"
                                            ]
                                        }
                                    },
                                    "examples": [{
                                        "port": "metrics"
                                    }]
                                },
                                "examples": [
                                    [{
                                        "port": "metrics"
                                    }]
                                ]
                            },
                            "relabelings": {
                                "type": "array",
                                "description": "Specify general relabeling",
                                "default": [],
                                "items": {}
                            },
                            "metricRelabelings": {
                                "type": "array",
                                "description": "Specify additional relabeling of metrics",
                                "default": [],
                                "items": {}
                            }
                        },
                        "examples": [{
                            "enabled": true,
                            "extraLabels": {},
                            "annotations": {},
                            "metricsEndpoints": [{
                                "port": "metrics"
                            }],
                            "relabelings": [{
                                "sourceLabels": [
                                    "__meta_kubernetes_pod_node_name"
                                ],
                                "targetLabel": "node",
                                "replacement": "${1}"
                            }],
                            "metricRelabelings": []
                        }]
                    },
                        "deploymentAnnotations": {
                            "type": "object",
                            "default": {},
                            "title": "The deploymentAnnotations Schema",
                            "required": [],
                            "properties": {},
                            "examples": [{}]
                        },
                        "serviceAnnotations": {
                            "type": "object",
                            "default": {},
                            "title": "The serviceAnnotations Schema",
                            "required": [],
                            "properties": {},
                            "examples": [{}]
                        },
                        "podAnnotations": {
                            "type": "object",
                            "default": {},
                            "title": "The podAnnotations Schema",
                            "required": [],
                            "properties": {},
                            "examples": [{}]
                        },
                        "podLabels": {
                            "type": "object",
                            "default": {},
                            "title": "The podLabels Schema",
                            "required": [],
                            "properties": {},
                            "examples": [{}]
                        },
                        "prometheusRule": {
                            "type": "object",
                            "default": {},
                            "title": "The prometheusRule Schema",
                            "required": [
                                "enabled",
                                "groups",
                                "defaultRules",
                                "extraLabels",
                                "annotations"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "The enabled Schema",
                                    "examples": [
                                        false
                                    ]
                                },
                                "groups": {
                                    "type": "array",
                                    "default": [],
                                    "title": "The groups Schema",
                                    "items": {},
                                    "examples": [
                                        []
                                    ]
                                },
                                "defaultRules": {
                                    "type": "object",
                                    "default": {},
                                    "title": "The defaultRules Schema",
                                    "required": [
                                        "enabled",
                                        "additionalRuleLabels",
                                        "additionalRuleAnnotations"
                                    ],
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean",
                                            "default": false,
                                            "title": "The enabled Schema",
                                            "examples": [
                                                false
                                            ]
                                        },
                                        "additionalRuleLabels": {
                                            "type": "object",
                                            "default": {},
                                            "title": "The additionalRuleLabels Schema",
                                            "required": [],
                                            "properties": {},
                                            "examples": [{}]
                                        },
                                        "additionalRuleAnnotations": {
                                            "type": "object",
                                            "default": {},
                                            "title": "The additionalRuleAnnotations Schema",
                                            "required": [],
                                            "properties": {},
                                            "examples": [{}]
                                        }
                                    },
                                    "examples": [{
                                        "enabled": false,
                                        "additionalRuleLabels": {},
                                        "additionalRuleAnnotations": {}
                                    }]
                                },
                                "extraLabels": {
                                    "type": "object",
                                    "default": {},
                                    "title": "The extraLabels Schema",
                                    "required": [],
                                    "properties": {},
                                    "examples": [{}]
                                },
                                "annotations": {
                                    "type": "object",
                                    "default": {},
                                    "title": "The annotations Schema",
                                    "required": [],
                                    "properties": {},
                                    "examples": [{}]
                                }
                            },
                            "examples": [{
                                "enabled": false,
                                "groups": [],
                                "defaultRules": {
                                    "enabled": false,
                                    "additionalRuleLabels": {},
                                    "additionalRuleAnnotations": {}
                                },
                                "extraLabels": {},
                                "annotations": {}
                            }]
                        },
                        "createRbacPermissions": {
                            "type": "boolean",
                            "default": false,
                            "title": "Whether the operator should create RBAC permissions for collector deployments",
                            "examples": [
                                false
                            ]
                        },
                        "extraArgs": {
                            "type": "array",
                            "default": [],
                            "title": "The extraArgs Schema",
                            "items": {},
                            "examples": [
                                []
                            ]
                        },
                        "leaderElection": {
                            "type": "object",
                            "default": {},
                            "title": "The leaderElection Schema",
                            "required": [
                                "enabled"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "The enabled Schema",
                                    "examples": [
                                        true
                                    ]
                                }
                            },
                            "examples": [{
                                "enabled": true
                            }]
                        },
                        "verticalPodAutoscaler": {
                            "type": "object",
                            "default": {},
                            "title": "The verticalPodAutoscaler Schema",
                            "required": [
                                "enabled",
                                "controlledResources",
                                "maxAllowed",
                                "minAllowed",
                                "updatePolicy"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "The enabled Schema",
                                    "examples": [
                                        false
                                    ]
                                },
                                "controlledResources": {
                                    "type": "array",
                                    "default": [],
                                    "title": "The controlledResources Schema",
                                    "items": {},
                                    "examples": [
                                        []
                                    ]
                                },
                                "maxAllowed": {
                                    "type": "object",
                                    "default": {},
                                    "title": "The maxAllowed Schema",
                                    "required": [],
                                    "properties": {},
                                    "examples": [{}]
                                },
                                "minAllowed": {
                                    "type": "object",
                                    "default": {},
                                    "title": "The minAllowed Schema",
                                    "required": [],
                                    "properties": {},
                                    "examples": [{}]
                                },
                                "updatePolicy": {
                                    "type": "object",
                                    "default": {},
                                    "title": "The updatePolicy Schema",
                                    "required": [
                                        "updateMode",
                                        "minReplicas"
                                    ],
                                    "properties": {
                                        "updateMode": {
                                            "type": "string",
                                            "default": "",
                                            "title": "The updateMode Schema",
                                            "examples": [
                                                "Auto"
                                            ]
                                        },
                                        "minReplicas": {
                                            "type": "integer",
                                            "default": 0,
                                            "title": "The minReplicas Schema",
                                            "examples": [
                                                2
                                            ]
                                        }
                                    },
                                    "examples": [{
                                        "updateMode": "Auto",
                                        "minReplicas": 2
                                    }]
                                }
                            },
                            "examples": [{
                                "enabled": false,
                                "controlledResources": [],
                                "maxAllowed": {},
                                "minAllowed": {},
                                "updatePolicy": {
                                    "updateMode": "Auto",
                                    "minReplicas": 2
                                }
                            }]
                        },
                        "rolling": {
                            "type": "boolean",
                            "default": false,
                            "title": "The rolling Schema",
                            "examples": [
                                false
                            ]
                        },
                        "securityContext": {
                            "type": "object",
                            "default": {},
                            "title": "The securityContext Schema",
                            "required": [],
                            "properties": {},
                            "examples": [{}]
                        }
                    },
                    "examples": [{
                        "image": {
                            "repository": "ghcr.io/open-telemetry/opentelemetry-operator/opentelemetry-operator",
                            "tag": "v0.93.0"
                        },
                        "collectorImage": {
                            "repository": "otel/opentelemetry-collector-contrib",
                            "tag": "0.93.0"
                        },
                        "opampBridgeImage": {
                            "repository": "",
                            "tag": ""
                        },
                        "targetAllocatorImage": {
                            "repository": "",
                            "tag": ""
                        },
                        "autoInstrumentationImage": {
                            "java": {
                                "repository": "",
                                "tag": ""
                            },
                            "nodejs": {
                                "repository": "",
                                "tag": ""
                            },
                            "python": {
                                "repository": "",
                                "tag": ""
                            },
                            "dotnet": {
                                "repository": "",
                                "tag": ""
                            },
                            "go": {
                                "repository": "",
                                "tag": ""
                            },
                            "apacheHttpd": {
                                "repository": "",
                                "tag": ""
                            }
                        },
                        "featureGates": "",
                        "ports": {
                            "metricsPort": 8080,
                            "webhookPort": 9443,
                            "healthzPort": 8081
                        },
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "128Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "64Mi"
                            }
                        },
                        "env": {
                            "ENABLE_WEBHOOKS": "true"
                        },
                        "serviceAccount": {
                            "create": true,
                            "annotations": {}
                        },
                        "serviceMonitor": {
                            "enabled": false,
                            "extraLabels": {},
                            "annotations": {},
                            "metricsEndpoints": [{
                                "port": "metrics"
                            }]
                        },
                        "podAnnotations": {},
                        "podLabels": {},
                        "prometheusRule": {
                            "enabled": false,
                            "groups": [],
                            "defaultRules": {
                                "enabled": false,
                                "additionalRuleLabels": {},
                                "additionalRuleAnnotations": {}
                            },
                            "extraLabels": {},
                            "annotations": {}
                        },
                        "extraArgs": [],
                        "leaderElection": {
                            "enabled": true
                        },
                        "verticalPodAutoscaler": {
                            "enabled": false,
                            "controlledResources": [],
                            "maxAllowed": {},
                            "minAllowed": {},
                            "updatePolicy": {
                                "updateMode": "Auto",
                                "minReplicas": 2
                            }
                        },
                        "rolling": false,
                        "securityContext": {}
                    }]
                }
            }
        },
        "otel": {
            "type": "object",
            "properties": {
                "api_token": {
                    "type": "string"
                },
                "endpoint": {
                    "description": "SolarWinds Observability OTEL endpoint.",
                    "type": "string"
                },
                "events": {
                    "type": "object",
                    "properties": {
                        "affinity": {
                            "$ref": "#/definitions/k8sAffinity"
                        },
                        "batch": {
                            "$ref": "#/definitions/collectorBatch"
                        },
                        "enabled": {
                            "type": "boolean"
                        },
                        "k8s_instrumentation": {
                            "$ref": "#/definitions/collectorK8sLabelsAnnotationsInstrumentation"
                        },
                        "filter": {
                            "type": "object"
                        },
                        "memory_ballast": {
                            "$ref": "#/definitions/collectorMemoryBallast"
                        },
                        "memory_limiter": {
                            "$ref": "#/definitions/collectorMemoryLimiter"
                        },
                        "nodeSelector": {
                            "$ref": "#/definitions/k8sNodeSelector"
                        },
                        "resources": {
                            "$ref": "#/definitions/k8sResourceRequirements"
                        },
                        "retry_on_failure": {
                            "$ref": "#/definitions/collectorRetryOnFailure"
                        },
                        "sending_queue": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/collectorSendingQueue"
                                },
                                {
                                    "properties": {
                                        "offload_to_disk": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        },
                        "telemetry": {
                            "$ref": "#/definitions/collectorTelemetry"
                        },
                        "terminationGracePeriodSeconds": {
                            "$ref": "#/definitions/k8sTerminationGracePeriod"
                        },
                        "timeout": {
                            "$ref": "#/definitions/collectorTimeout"
                        },
                        "tolerations": {
                            "$ref": "#/definitions/k8sTolerations"
                        }
                    },
                    "additionalProperties": false
                },
                "https_proxy_url": {
                    "type": "string"
                },
                "image": {
                    "$ref": "#/definitions/imageDefinition"
                },
                "init_images": {
                    "type": "object",
                    "properties": {
                        "busy_box": {
                            "$ref": "#/definitions/imageDefinition"
                        },
                        "swi_endpoint_check": {
                            "$ref": "#/definitions/imageDefinition"
                        }
                    },
                    "additionalProperties": false
                },
                "logs": {
                    "type": "object",
                    "properties": {
                        "affinity": {
                            "$ref": "#/definitions/k8sAffinity"
                        },
                        "batch": {
                            "$ref": "#/definitions/collectorBatch"
                        },
                        "container": {
                            "type": "boolean"
                        },
                        "enabled": {
                            "type": "boolean"
                        },
                        "filestorage": {
                            "type": "object",
                            "properties": {
                                "directory": {
                                    "type": "string"
                                },
                                "timeout": {
                                    "type": "string"
                                }
                            }
                        },
                        "filter": {
                            "type": "object"
                        },
                        "journal": {
                            "type": "boolean"
                        },
                        "memory_ballast": {
                            "$ref": "#/definitions/collectorMemoryBallast"
                        },
                        "memory_limiter": {
                            "$ref": "#/definitions/collectorMemoryLimiter"
                        },
                        "nodeSelector": {
                            "$ref": "#/definitions/k8sNodeSelector"
                        },
                        "receiver": {
                            "type": "object",
                            "properties": {
                                "encoding": {
                                    "type": "string"
                                },
                                "fingerprint_size": {
                                    "type": "string"
                                },
                                "max_concurrent_files": {
                                    "type": "integer"
                                },
                                "max_log_size": {
                                    "type": "string"
                                },
                                "poll_interval": {
                                    "type": "string"
                                },
                                "start_at": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false
                        },
                        "k8s_instrumentation": {
                            "$ref": "#/definitions/collectorK8sLabelsAnnotationsInstrumentation"
                        },
                        "resources": {
                            "$ref": "#/definitions/k8sResourceRequirements"
                        },
                        "telemetry": {
                            "$ref": "#/definitions/collectorTelemetry"
                        },
                        "tolerations": {
                            "$ref": "#/definitions/k8sTolerations"
                        }
                    },
                    "additionalProperties": false
                },
                "manifests": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        },
                        "pull_every": {
                            "type": "string"
                        },
                        "filter": {
                            "type": "object"
                        }
                    },
                    "additionalProperties": false
                },
                "metrics": {
                    "type": "object",
                    "properties": {
                        "affinity": {
                            "$ref": "#/definitions/k8sAffinity"
                        },
                        "autodiscovery": {
                            "type": "object",
                            "properties": {
                                "prometheusEndpoints": {
                                    "type": "object",
                                    "properties": {
                                        "additionalRules": {
                                            "type": "string"
                                        },
                                        "customTransformations": {
                                            "type": "object",
                                            "properties": {
                                                "counterToRate": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "additionalProperties": false
                                        },
                                        "enabled": {
                                            "type": "boolean"
                                        },
                                        "filter": {
                                            "type": "object"
                                        },
                                        "podMonitors": {
                                            "type": "object",
                                            "properties": {
                                                "rules": {
                                                    "type": "array"
                                                }
                                            }
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "additionalProperties": false
                        },
                        "batch": {
                            "$ref": "#/definitions/collectorBatch"
                        },
                        "enabled": {
                            "type": "boolean"
                        },
                        "extra_scrape_metrics": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "filter": {
                            "type": "object"
                        },
                        "force_extra_scrape_metrics": {
                            "type": "boolean"
                        },
                        "k8s_instrumentation": {
                            "$ref": "#/definitions/collectorK8sLabelsAnnotationsInstrumentation"
                        },
                        "kube-state-metrics": {
                            "type": "object",
                            "properties": {
                                "scheme": {
                                    "type": "string"
                                },
                                "scrape_interval": {
                                    "type": "string"
                                },
                                "url": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false
                        },
                        "livenessProbe": {
                            "type": "object",
                            "properties": {
                                "initialDelaySeconds": {
                                    "type": "integer"
                                }
                            },
                            "additionalProperties": false
                        },
                        "memory_ballast": {
                            "$ref": "#/definitions/collectorMemoryBallast"
                        },
                        "memory_limiter": {
                            "$ref": "#/definitions/collectorMemoryLimiter"
                        },
                        "nodeSelector": {
                            "$ref": "#/definitions/k8sNodeSelector"
                        },
                        "otlp_endpoint": {
                            "type": "object",
                            "properties": {
                                "port": {
                                    "$ref": "#/definitions/port"
                                }
                            },
                            "additionalProperties": false
                        },
                        "prometheus": {
                            "type": "object",
                            "properties": {
                                "scheme": {
                                    "type": "string"
                                },
                                "scrape_interval": {
                                    "type": "string"
                                },
                                "url": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false
                        },
                        "prometheus_check": {
                            "type": "boolean"
                        },
                        "readinessProbe": {
                            "type": "object",
                            "properties": {
                                "initialDelaySeconds": {
                                    "type": "integer"
                                }
                            },
                            "additionalProperties": false
                        },
                        "resources": {
                            "$ref": "#/definitions/k8sResourceRequirements"
                        },
                        "retry_on_failure": {
                            "$ref": "#/definitions/collectorRetryOnFailure"
                        },
                        "sending_queue": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/collectorSendingQueue"
                                },
                                {
                                    "properties": {
                                        "offload_to_disk": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        },
                        "swi_endpoint_check": {
                            "type": "boolean"
                        },
                        "telemetry": {
                            "$ref": "#/definitions/collectorTelemetry"
                        },
                        "terminationGracePeriodSeconds": {
                            "$ref": "#/definitions/k8sTerminationGracePeriod"
                        },
                        "timeout": {
                            "$ref": "#/definitions/collectorTimeout"
                        },
                        "tolerations": {
                            "$ref": "#/definitions/k8sTolerations"
                        }
                    },
                    "additionalProperties": false
                },
                "node_collector": {
                    "type": "object",
                    "properties": {
                        "retry_on_failure": {
                            "$ref": "#/definitions/collectorRetryOnFailure"
                        },
                        "sending_queue": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/collectorSendingQueue"
                                },
                                {
                                    "properties": {
                                        "persistent_storage": {
                                            "type": "object",
                                            "properties": {
                                                "directory": {
                                                    "type": "string"
                                                },
                                                "enabled": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "additionalProperties": false
                                        }
                                    }
                                }
                            ]
                        },
                        "terminationGracePeriodSeconds": {
                            "$ref": "#/definitions/k8sTerminationGracePeriod"
                        },
                        "timeout": {
                            "$ref": "#/definitions/collectorTimeout"
                        }
                    },
                    "additionalProperties": false
                },
                "tls_insecure": {
                    "type": "boolean"
                },
                "windows": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        },
                        "image": {
                            "$ref": "#/definitions/imageDefinition"
                        }
                    },
                    "additionalProperties": false
                }
            },
            "required": [
                "endpoint"
            ],
            "additionalProperties": false
        },
        "prometheus": {
            "description": "Prometheus is deployed only in case `opencost` section is enabled. Otherwise this section can be ignored.",
            "type": "object",
            "properties": {
                "configmapReload": {
                    "type": "object",
                    "properties": {
                        "prometheus": {
                            "type": "object",
                            "properties": {
                                "image": {
                                    "type": "object",
                                    "properties": {
                                        "digest": {
                                            "$ref": "#/definitions/imageDigest"
                                        },
                                        "pullPolicy": {
                                            "$ref": "#/definitions/k8sImagePullPolicy"
                                        },
                                        "repository": {
                                            "$ref": "#/definitions/imageRepository"
                                        },
                                        "tag": {
                                            "$ref": "#/definitions/imageTag"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "server": {
                    "type": "object",
                    "properties": {
                        "image": {
                            "type": "object",
                            "properties": {
                                "digest": {
                                    "$ref": "#/definitions/imageDigest"
                                },
                                "pullPolicy": {
                                    "$ref": "#/definitions/k8sImagePullPolicy"
                                },
                                "repository": {
                                    "$ref": "#/definitions/imageRepository"
                                },
                                "tag": {
                                    "$ref": "#/definitions/imageTag"
                                }
                            }
                        }
                    }
                }
            }
        },
        "prometheus-node-exporter": {
            "description": "Node exporter is deployed only in case `opencost` section is enabled. Otherwise this section can be ignored.",
            "type": "object",
            "properties": {
                "image": {
                    "type": "object",
                    "registry": {
                        "$ref": "#/definitions/imageRegistry"
                    },
                    "repository": {
                        "$ref": "#/definitions/imageRepository"
                    },
                    "tag": {
                        "$ref": "#/definitions/imageTag"
                    },
                    "pullPolicy": {
                        "$ref": "#/definitions/k8sImagePullPolicy"
                    },
                    "digest": {
                        "$ref": "#/definitions/imageDigest"
                    }
                }
            }
        },
        "swoagent": {
            "description": "Whether the SWO Agent should be deployed as part of this chart. If not, SWO Integrations are not available.",
            "type": "object",
            "properties": {
                "affinity": {
                    "$ref": "#/definitions/k8sAffinity"
                },
                "enabled": {
                    "type": "boolean"
                },
                "image": {
                    "$ref": "#/definitions/imageDefinition"
                },
                "nodeSelector": {
                    "$ref": "#/definitions/k8sNodeSelector"
                },
                "resources": {
                    "$ref": "#/definitions/k8sResourceRequirements"
                }
            },
            "additionalProperties": false
        },
        "aks":{
            "type":"boolean"
        },
        "global": {
            "type": "object"
        }
    },
    "required": [
        "cluster",
        "otel"
    ],
    "additionalProperties": false
}