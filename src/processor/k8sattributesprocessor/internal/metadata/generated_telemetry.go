// Copyright 2022 SolarWinds Worldwide, LLC. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at:
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Source: https://github.com/open-telemetry/opentelemetry-collector-contrib
// Changes customizing the original source code: see CHANGELOG.md in deploy/helm directory

// Code generated by mdatagen. DO NOT EDIT.

package metadata

import (
	"errors"

	"go.opentelemetry.io/otel/metric"
	"go.opentelemetry.io/otel/metric/noop"
	"go.opentelemetry.io/otel/trace"

	"go.opentelemetry.io/collector/component"
	"go.opentelemetry.io/collector/config/configtelemetry"
)

func Meter(settings component.TelemetrySettings) metric.Meter {
	return settings.MeterProvider.Meter("github.com/solarwinds/swi-k8s-opentelemetry-collector/processor/swk8sattributesprocessor")
}

func Tracer(settings component.TelemetrySettings) trace.Tracer {
	return settings.TracerProvider.Tracer("github.com/solarwinds/swi-k8s-opentelemetry-collector/processor/swk8sattributesprocessor")
}

// TelemetryBuilder provides an interface for components to report telemetry
// as defined in metadata and user config.
type TelemetryBuilder struct {
	meter                       metric.Meter
	OtelsvcK8sIPLookupMiss      metric.Int64Counter
	OtelsvcK8sNamespaceAdded    metric.Int64Counter
	OtelsvcK8sNamespaceDeleted  metric.Int64Counter
	OtelsvcK8sNamespaceUpdated  metric.Int64Counter
	OtelsvcK8sNodeAdded         metric.Int64Counter
	OtelsvcK8sNodeDeleted       metric.Int64Counter
	OtelsvcK8sNodeUpdated       metric.Int64Counter
	OtelsvcK8sPodAdded          metric.Int64Counter
	OtelsvcK8sPodDeleted        metric.Int64Counter
	OtelsvcK8sPodTableSize      metric.Int64Gauge
	OtelsvcK8sPodUpdated        metric.Int64Counter
	OtelsvcK8sReplicasetAdded   metric.Int64Counter
	OtelsvcK8sReplicasetDeleted metric.Int64Counter
	OtelsvcK8sReplicasetUpdated metric.Int64Counter

	OtelsvcK8sDeploymentAdded     metric.Int64Counter
	OtelsvcK8sDeploymentDeleted   metric.Int64Counter
	OtelsvcK8sDeploymentTableSize metric.Int64Gauge
	OtelsvcK8sDeploymentUpdated   metric.Int64Counter

	OtelsvcK8sStatefulSetAdded     metric.Int64Counter
	OtelsvcK8sStatefulSetDeleted   metric.Int64Counter
	OtelsvcK8sStatefulSetTableSize metric.Int64Gauge
	OtelsvcK8sStatefulSetUpdated   metric.Int64Counter

	OtelsvcK8sReplicasetTableSize metric.Int64Gauge

	OtelsvcK8sDaemonSetAdded     metric.Int64Counter
	OtelsvcK8sDaemonSetDeleted   metric.Int64Counter
	OtelsvcK8sDaemonSetTableSize metric.Int64Gauge
	OtelsvcK8sDaemonSetUpdated   metric.Int64Counter

	OtelsvcK8sJobAdded     metric.Int64Counter
	OtelsvcK8sJobDeleted   metric.Int64Counter
	OtelsvcK8sJobTableSize metric.Int64Gauge
	OtelsvcK8sJobUpdated   metric.Int64Counter

	OtelsvcK8sCronJobAdded     metric.Int64Counter
	OtelsvcK8sCronJobDeleted   metric.Int64Counter
	OtelsvcK8sCronJobTableSize metric.Int64Gauge
	OtelsvcK8sCronJobUpdated   metric.Int64Counter

	OtelsvcK8sNodeTableSize metric.Int64Gauge

	OtelsvcK8sPersistentVolumeAdded     metric.Int64Counter
	OtelsvcK8sPersistentVolumeDeleted   metric.Int64Counter
	OtelsvcK8sPersistentVolumeTableSize metric.Int64Gauge
	OtelsvcK8sPersistentVolumeUpdated   metric.Int64Counter

	OtelsvcK8sPersistentVolumeClaimAdded     metric.Int64Counter
	OtelsvcK8sPersistentVolumeClaimDeleted   metric.Int64Counter
	OtelsvcK8sPersistentVolumeClaimTableSize metric.Int64Gauge
	OtelsvcK8sPersistentVolumeClaimUpdated   metric.Int64Counter

	OtelsvcK8sServiceAdded     metric.Int64Counter
	OtelsvcK8sServiceDeleted   metric.Int64Counter
	OtelsvcK8sServiceTableSize metric.Int64Gauge
	OtelsvcK8sServiceUpdated   metric.Int64Counter
}

// TelemetryBuilderOption applies changes to default builder.
type TelemetryBuilderOption interface {
	apply(*TelemetryBuilder)
}

type telemetryBuilderOptionFunc func(mb *TelemetryBuilder)

func (tbof telemetryBuilderOptionFunc) apply(mb *TelemetryBuilder) {
	tbof(mb)
}

// NewTelemetryBuilder provides a struct with methods to update all internal telemetry
// for a component
func NewTelemetryBuilder(settings component.TelemetrySettings, options ...TelemetryBuilderOption) (*TelemetryBuilder, error) {
	builder := TelemetryBuilder{}
	for _, op := range options {
		op.apply(&builder)
	}
	builder.meter = Meter(settings)
	var err, errs error
	builder.OtelsvcK8sIPLookupMiss, err = getLeveledMeter(builder.meter, configtelemetry.LevelBasic, settings.MetricsLevel).Int64Counter(
		"otelcol_otelsvc_k8s_ip_lookup_miss",
		metric.WithDescription("Number of times pod by IP lookup failed."),
		metric.WithUnit("1"),
	)
	errs = errors.Join(errs, err)
	builder.OtelsvcK8sNamespaceAdded, err = getLeveledMeter(builder.meter, configtelemetry.LevelBasic, settings.MetricsLevel).Int64Counter(
		"otelcol_otelsvc_k8s_namespace_added",
		metric.WithDescription("Number of namespace add events received"),
		metric.WithUnit("1"),
	)
	errs = errors.Join(errs, err)
	builder.OtelsvcK8sNamespaceDeleted, err = getLeveledMeter(builder.meter, configtelemetry.LevelBasic, settings.MetricsLevel).Int64Counter(
		"otelcol_otelsvc_k8s_namespace_deleted",
		metric.WithDescription("Number of namespace delete events received"),
		metric.WithUnit("1"),
	)
	errs = errors.Join(errs, err)
	builder.OtelsvcK8sNamespaceUpdated, err = getLeveledMeter(builder.meter, configtelemetry.LevelBasic, settings.MetricsLevel).Int64Counter(
		"otelcol_otelsvc_k8s_namespace_updated",
		metric.WithDescription("Number of namespace update events received"),
		metric.WithUnit("1"),
	)
	errs = errors.Join(errs, err)
	builder.OtelsvcK8sNodeAdded, err = getLeveledMeter(builder.meter, configtelemetry.LevelBasic, settings.MetricsLevel).Int64Counter(
		"otelcol_otelsvc_k8s_node_added",
		metric.WithDescription("Number of node add events received"),
		metric.WithUnit("1"),
	)
	errs = errors.Join(errs, err)
	builder.OtelsvcK8sNodeDeleted, err = getLeveledMeter(builder.meter, configtelemetry.LevelBasic, settings.MetricsLevel).Int64Counter(
		"otelcol_otelsvc_k8s_node_deleted",
		metric.WithDescription("Number of node delete events received"),
		metric.WithUnit("1"),
	)
	errs = errors.Join(errs, err)
	builder.OtelsvcK8sNodeUpdated, err = getLeveledMeter(builder.meter, configtelemetry.LevelBasic, settings.MetricsLevel).Int64Counter(
		"otelcol_otelsvc_k8s_node_updated",
		metric.WithDescription("Number of node update events received"),
		metric.WithUnit("1"),
	)
	errs = errors.Join(errs, err)
	builder.OtelsvcK8sPodAdded, err = getLeveledMeter(builder.meter, configtelemetry.LevelBasic, settings.MetricsLevel).Int64Counter(
		"otelcol_otelsvc_k8s_pod_added",
		metric.WithDescription("Number of pod add events received"),
		metric.WithUnit("1"),
	)
	errs = errors.Join(errs, err)
	builder.OtelsvcK8sPodDeleted, err = getLeveledMeter(builder.meter, configtelemetry.LevelBasic, settings.MetricsLevel).Int64Counter(
		"otelcol_otelsvc_k8s_pod_deleted",
		metric.WithDescription("Number of pod delete events received"),
		metric.WithUnit("1"),
	)
	errs = errors.Join(errs, err)
	builder.OtelsvcK8sPodTableSize, err = getLeveledMeter(builder.meter, configtelemetry.LevelBasic, settings.MetricsLevel).Int64Gauge(
		"otelcol_otelsvc_k8s_pod_table_size",
		metric.WithDescription("Size of table containing pod info"),
		metric.WithUnit("1"),
	)
	errs = errors.Join(errs, err)
	builder.OtelsvcK8sPodUpdated, err = getLeveledMeter(builder.meter, configtelemetry.LevelBasic, settings.MetricsLevel).Int64Counter(
		"otelcol_otelsvc_k8s_pod_updated",
		metric.WithDescription("Number of pod update events received"),
		metric.WithUnit("1"),
	)
	errs = errors.Join(errs, err)
	builder.OtelsvcK8sReplicasetAdded, err = getLeveledMeter(builder.meter, configtelemetry.LevelBasic, settings.MetricsLevel).Int64Counter(
		"otelcol_otelsvc_k8s_replicaset_added",
		metric.WithDescription("Number of ReplicaSet add events received"),
		metric.WithUnit("1"),
	)
	errs = errors.Join(errs, err)
	builder.OtelsvcK8sReplicasetDeleted, err = getLeveledMeter(builder.meter, configtelemetry.LevelBasic, settings.MetricsLevel).Int64Counter(
		"otelcol_otelsvc_k8s_replicaset_deleted",
		metric.WithDescription("Number of ReplicaSet delete events received"),
		metric.WithUnit("1"),
	)
	errs = errors.Join(errs, err)
	builder.OtelsvcK8sReplicasetUpdated, err = getLeveledMeter(builder.meter, configtelemetry.LevelBasic, settings.MetricsLevel).Int64Counter(
		"otelcol_otelsvc_k8s_replicaset_updated",
		metric.WithDescription("Number of ReplicaSet update events received"),
		metric.WithUnit("1"),
	)
	errs = errors.Join(errs, err)

	err = addAdditionalMeters(&builder, settings)
	errs = errors.Join(errs, err)

	return &builder, errs
}

func getLeveledMeter(meter metric.Meter, cfgLevel, srvLevel configtelemetry.Level) metric.Meter {
	if cfgLevel <= srvLevel {
		return meter
	}
	return noop.Meter{}
}
