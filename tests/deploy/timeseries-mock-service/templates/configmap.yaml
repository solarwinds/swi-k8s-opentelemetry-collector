apiVersion: v1
kind: ConfigMap
metadata:
  name: timeseries-mock-service-config
data:
  relay: |
    exporters:
      file/logs:
        path: /data/logs.json
        # empty rotation - workaround for https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/18251
        rotation:
      file/metrics:
        path: /data/metrics.json
        # empty rotation - workaround for https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/18251
        rotation:
      file/events:
        path: /data/events.json
        # empty rotation - workaround for https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/18251
        rotation:
      file/manifests:
        path: /data/manifests.json
        # empty rotation - workaround for https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/18251
        rotation:
      file/traces:
        path: /data/traces.json
        # empty rotation - workaround for https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/18251
        rotation:
      file/entitystateevents:
        path: /data/entitystateevents.json
        # empty rotation - workaround for https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/18251
        rotation:
      otlphttp/loki:
        endpoint: http://loki.{{ .Release.Namespace }}.svc.cluster.local:3100/otlp
        tls:
          insecure: true
      prometheus:
        endpoint: "0.0.0.0:8080"
        namespace: output
        send_timestamps: true
        metric_expiration: 1m
        enable_open_metrics: true
        resource_to_telemetry_conversion:
          enabled: true
    extensions:
      health_check:
        endpoint: 0.0.0.0:13133
    processors:
      filter/events:
        logs:
          log_record:
            - not(IsMatch(resource.attributes["sw.k8s.log.type"], "event"))
      filter/manifests:
        logs:
          log_record:
            - not(IsMatch(resource.attributes["sw.k8s.log.type"], "manifest"))
      filter/logs:
        logs:
          log_record:
            - not(IsMatch(resource.attributes["sw.k8s.log.type"], "container") or IsMatch(resource.attributes["sw.k8s.log.type"], "journal"))
      filter/entitystateevents:
        logs:
          log_record:
            - not(IsMatch(instrumentation_scope.attributes["otel.entity.event_as_log"], "true"))
      transform/entity_index_label:
        error_mode: ignore
        log_statements:
          - context: log
            statements:
              - set(resource.attributes["sw.entity.event"], "true")
              - set(resource.attributes["otel.entity.event.type"], attributes["otel.entity.event.type"])
              - set(resource.attributes["otel.entity.type"], attributes["otel.entity.type"])
              - set(resource.attributes["otel.entity_relationship.type"], attributes["otel.entity_relationship.type"])
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:9082
    service:
      extensions:
      - health_check
      pipelines:
        metrics:
          exporters:
          - file/metrics
          - prometheus
          processors:
          receivers:
          - otlp
        logs/logs:
          exporters:
          - file/logs
          - otlphttp/loki
          processors:
          - filter/logs
          receivers:
          - otlp
        logs/events:
          exporters:
          - file/events
          - otlphttp/loki
          processors:
          - filter/events
          receivers:
          - otlp
        logs/manifests:
          exporters:
          - file/manifests
          - otlphttp/loki
          processors:
          - filter/manifests
          receivers:
          - otlp
        logs/entitystateevents:
          exporters:
          - file/entitystateevents
          - otlphttp/loki
          processors:
          - filter/entitystateevents
          - transform/entity_index_label
          receivers:
          - otlp
        traces:
          exporters:
          - file/traces
          processors:
          receivers:
          - otlp
