apiVersion: v1
kind: Namespace
metadata:
  name: test-namespace
  labels:
    app: test-app
    purpose: testing
  annotations:
    description: This is a test namespace.
---
apiVersion: v1
kind: Pod
metadata:
  name: test-pod
  namespace: test-namespace
  labels:
    app: test-pod
  annotations:
    test-annotation: "test-value"
spec:
  containers:
  - name: test-container
    image: busybox
    command: ["sh", "-c", "sleep infinity"]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-deployment
  namespace: test-namespace
  labels:
    app: test-deployment
  annotations:
    test-annotation: "test-value"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-deployment
  template:
    metadata:
      labels:
        app: test-deployment
      annotations:
        test-annotation: "test-value"
    spec:
      containers:
      - name: test-container
        image: busybox
        command: ["sh", "-c", "sleep infinity"]
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: test-statefulset
  namespace: test-namespace
  labels:
    app: test-statefulset
  annotations:
    test-annotation: "test-value"
spec:
  serviceName: "test-service"
  replicas: 1
  selector:
    matchLabels:
      app: test-statefulset
  template:
    metadata:
      labels:
        app: test-statefulset
      annotations:
        test-annotation: "test-value"
    spec:
      containers:
      - name: test-container
        image: busybox
        command: ["sh", "-c", "sleep infinity"]
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: test-replicaset
  namespace: test-namespace
  labels:
    app: test-replicaset
  annotations:
    test-annotation: "test-value"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-replicaset
  template:
    metadata:
      labels:
        app: test-replicaset
      annotations:
        test-annotation: "test-value"
    spec:
      containers:
      - name: test-container
        image: busybox
        command: ["sh", "-c", "sleep infinity"]
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: test-daemonset
  namespace: test-namespace
  labels:
    app: test-daemonset
  annotations:
    test-annotation: "test-value"
spec:
  selector:
    matchLabels:
      app: test-daemonset
  template:
    metadata:
      labels:
        app: test-daemonset
      annotations:
        test-annotation: "test-value"
    spec:
      containers:
      - name: test-container
        image: busybox
        command: ["sh", "-c", "sleep infinity"]
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: test-cronjob
  namespace: test-namespace
  labels:
    app: test-cronjob
  annotations:
    test-annotation: "test-value"
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: test-cronjob
          annotations:
            test-annotation: "test-value"
        spec:
          containers:
          - name: test-container
            image: busybox
            command: ["sh", "-c", "sleep 10"]
          restartPolicy: Never
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: test-pv
  labels:
    type: local
    example.com/label: "example-label"
  annotations:
    example.com/annotation: "example-annotation"
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: test-storage-class
  hostPath:
    path: "/tmp/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: test-pvc
  namespace: test-namespace
  labels:
    example.com/label: "example-label"
  annotations:
    example.com/annotation: "example-annotation"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: test-storage-class
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: test-storage-class
provisioner: kubernetes.io/no-provisioner
reclaimPolicy: Delete
volumeBindingMode: Immediate
---
apiVersion: v1
kind: Service
metadata:
  name: test-service
  namespace: test-namespace
  labels:
    example.com/label: "example-label"
  annotations:
    example.com/annotation: "example-annotation"
spec:
  selector:
    app: test-pod
  ports:
  - name: test-service-port
    protocol: TCP
    port: 80
    targetPort: http-web-svc

